<?xml version="1.0" encoding="utf-8"?>
<DDC 
  CLASS="PKG" 
  KEY="Z_116_PKG_SUBSIDY_GEN_INFO" 
  MODE="O" 
  xmlns:LINK="ddc:link" 
  xmlns:CFG="ddc:cfg" 
  HASH="7DEC5A7DA5A71F9F07F4DFD492D59A43">
  <PKG 
    NAME="Z_116_PKG_SUBSIDY_GEN_INFO">
    <LOB_FIELD 
      NAME="HEADER">
      <![CDATA[create or replace package COLVIR.Z_116_PKG_SUBSIDY_GEN_INFO is
  /*
     Эта процедура собирает полную информацию о субсидируемых кредитах.
     Эту информацию использовали для отправки в Минфин.

     Author: Farhod Marifjonov, Nasriddinov Farziddin
     Version: 1.1
  */
  ----------------------------------------------------------------------------------------------------
  Procedure Gen_Subsidy_Informations;
  ----------------------------------------------------------------------------------------------------
  Procedure Get_Month
  (
    Pdate   date,
    Poutput out clob
  );
end Z_116_PKG_SUBSIDY_GEN_INFO;
]]>
    </LOB_FIELD>
    <LOB_FIELD 
      NAME="TEXT">
      <![CDATA[create or replace package body COLVIR.Z_116_PKG_SUBSIDY_GEN_INFO is
  ----------------------------------------------------------------------------------------------------
  Function Get_Credit_Amount
  (
    i_Dea_Dep_Id number,
    i_Dea_Id     number
  ) return varchar2 is
    v_Code number;
  begin
    select t_Pkgaccbal.Faccbal(x.Dep_Id, x.Id, p_Operday, 0)
      into v_Code
      from g_Accbln q,
           Ledacc w,
           c_Dep d,
           (select a.Dep_Id,
                   a.Id,
                   a.Val_Id,
                   Decode(a.Valutfl, 0, 0, Decode(a.Val_Id, null, 1, 0)) as Multifl,
                   a.Valutfl,
                   a.Activfl,
                   (select count(*)
                      from t_Bal
                     where Dep_Id = a.Dep_Id
                       and Id = a.Id
                       and Rownum = 1) as Balcnt
              from Ledacc_Det d, t_Acc a
             where d.Dep_Id = a.Dep_Id
               and d.Acc_Id = a.Id
               and d.Sgn_Id = t_Asgn.Fcode2id(Nvl('DEA', 'DEA'))
               and d.Pk1 = to_char(i_Dea_Dep_Id)
               and d.Pk2 = to_char(i_Dea_Id)) x
     where q.Dep_Id = x.Dep_Id
       and q.Id = x.Id
       and w.Id = q.Cha_Id
       and w.Code = '14903'
       and d.Id = x.Dep_Id
       and d.Code not like 'OLD%'
       and t_Pkgaccbal.Faccbal(x.Dep_Id, x.Id, p_Operday, 0) > 0; -- The Reason This Condition - In 14903 Several Codes Are Possible

    return v_Code;
  exception
    when others then
      return 0;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Calc_Amount_For_This_Month is
    v_Month        date := Trunc(sysdate, 'month');
    v_Period_Begin date := Trunc(v_Month - 1, 'month') + 20; -- Ex: 21.04.2024
    v_Period_End   date := v_Month + 19; -- Ex: 20.05.2024
    v_Curr_Date    date;
    v_Num          number;
    v_Amount       number;
  begin
    for r in (select *
                from z_116_Subsidy_Main_Info q
               where q.Calc_Month = v_Month)
    loop
      v_Amount := 0;

      for i in 0 .. v_Period_End - v_Period_Begin
      loop
        v_Curr_Date := v_Period_Begin + i;

        c_Pkgconnect.Pchday(v_Curr_Date, v_Num);

        v_Amount := v_Amount +
                    (Get_Credit_Amount(r.Dea_Dep_Id, r.Dea_Id) * r.Percentage) / 365 / 100;
      end loop;

      update z_116_Subsidy_Main_Info w
         set w.Amount_For_This_Month = v_Amount
       where w.Calc_Month = v_Month
         and w.Pinfl = r.Pinfl;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Function Get_Credit_Percentage
  (
    i_Dea_Dep_Id number,
    i_Dea_Id     number
  ) return number is
    v_Percent number;
  begin
    select Pcn
      into v_Percent
      from Lv_Qr_Arl
     where Dep_Id = i_Dea_Dep_Id
       and Id = i_Dea_Id
       and Longname = 'Проценты по кредиту субсидированные'; -- STATIC

    return v_Percent;
  exception
    when others then
      return 0;
  end;

  ----------------------------------------------------------------------------------------------------
  Function Get_Contract_Start_Date
  (
    i_Dep_Id number,
    i_Id     number
  ) return date is
    v_Date date;
  begin
    select min(j.Doper)
      into v_Date
      from t_Process,
           t_Bop_Dscr_Std,
           t_Oprchr_Std Opchr,
           c_Usr u,
           (select /*WHER_SUB*/
             j.*
              from t_Operjrn j
             where (j.Id in (select distinct Id
                               from t_Procmem
                              where Id = i_Id))
               and exists
             (select 1
                      from Dual
                     where c_Pkggrant.Fchkjrnvrf(j.Id, j.Njrn, 3, j.Bop_Id, j.Noper, j.Tus_Id) = 1)) j
     where j.Id = t_Process.Id
       and j.Bop_Id = t_Bop_Dscr_Std.Id
       and j.Tus_Id = u.Id
       and j.Cha_Id = Opchr.Id
       and Opchr.Code = '10011'
       and j.Undofl = '0'
       and j.Cancelfl = '0';

    return v_Date;
  exception
    when others then
      return null;
  end;

  ----------------------------------------------------------------------------------------------------
  Function Get_Acc_External
  (
    i_Dept_Id number,
    i_Id      number
  ) return varchar2 deterministic is
    v_Code varchar2(100);
  begin
    select q.Code
      into v_Code
      from g_Accbln q,
           Ledacc w,
           (select a.Dep_Id,
                   a.Id,
                   a.Val_Id,
                   Decode(a.Valutfl, 0, 0, Decode(a.Val_Id, null, 1, 0)) as Multifl,
                   a.Valutfl,
                   a.Activfl,
                   (select count(*)
                      from t_Bal
                     where Dep_Id = a.Dep_Id
                       and Id = a.Id
                       and Rownum = 1) as Balcnt
              from Ledacc_Det d, t_Acc a
             where d.Dep_Id = a.Dep_Id
               and d.Acc_Id = a.Id
               and d.Sgn_Id = t_Asgn.Fcode2id(Nvl('DEA', 'DEA'))
               and d.Pk1 = to_char(i_Dept_Id)
               and d.Pk2 = to_char(i_Id)) x
     where q.Dep_Id = x.Dep_Id
       and q.Id = x.Id
       and w.Id = q.Cha_Id
       and w.Code = '29801-001S';

    return v_Code;
  exception
    when others then
      return null;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Set_Percentage(i_Month date) is
    v_Prc number;
  begin
    for r in (select q.*
                from z_116_Subsidy_Main_Info q
               where q.Calc_Month = i_Month
                 and q.Percentage is null)
    loop
      v_Prc := Get_Credit_Percentage(r.Dea_Dep_Id, r.Dea_Id);

      update z_116_Subsidy_Main_Info q
         set q.Percentage = v_Prc
       where q.Pinfl = r.Pinfl
         and q.Calc_Month = i_Month;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Set_Acc_External(i_Month date) is
    v_Res varchar2(100);
  begin
    for r in (select q.*
                from z_116_Subsidy_Main_Info q
               where q.Calc_Month = i_Month
                 and q.Acc_External is null)
    loop
      v_Res := Get_Acc_External(r.Dea_Dep_Id, r.Dea_Id);

      update z_116_Subsidy_Main_Info q
         set q.Acc_External = v_Res
       where q.Pinfl = r.Pinfl
         and q.Calc_Month = i_Month;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Set_Rest_Amount(i_Month date) is
    v_Date date := i_Month + 19; -- Здесь всегда должно о число 20
    v_Res  varchar2(100);
    v_Num  number;
  begin
    c_Pkgconnect.Pchday(v_Date, v_Num);

    for r in (select q.*
                from z_116_Subsidy_Main_Info q
               where q.Calc_Month = i_Month)
    loop
      v_Res := t_Pkgarlrun.Fdeaaccbal(r.Dea_Dep_Id, r.Dea_Id, 'CR_BAL');

      update z_116_Subsidy_Main_Info q
         set q.Rest_Amount = v_Res
       where q.Pinfl = r.Pinfl
         and q.Calc_Month = i_Month;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Set_Contract_Start_Date(i_Month date) is
    v_Res date;
  begin
    for r in (select q.*
                from z_116_Subsidy_Main_Info q
               where q.Calc_Month = i_Month
                 and q.Contract_Payment_Start_Date is null)
    loop
      v_Res := Get_Contract_Start_Date(r.Cli_Dep_Id, r.Proc_Id);

      update z_116_Subsidy_Main_Info q
         set q.Contract_Payment_Start_Date = to_char(to_date(v_Res, 'DD.MM.YYYY'), 'YYYY-MM-DD')
       where q.Pinfl = r.Pinfl
         and q.Calc_Month = i_Month;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Set_Address(i_Month date) is
    v_Region     varchar2(50);
    v_District   varchar2(50);
    v_Cli_Dep_Id number;
    v_Cli_Id     number;
  begin
    for r in (select q.*
                from z_116_Subsidy_Main_Info q
               where q.Calc_Month = i_Month)
    loop
      begin
        select c.Dep_Id, c.Id
          into v_Cli_Dep_Id, v_Cli_Id
          from c_Dep d, g_Clihst Ch, g_Cli c
         where d.Id = r.Srv_Dep_Id
           and c.Depcrd_Id = d.Id
           and c.Id = Ch.Id
           and c.Dep_Id = Ch.Dep_Id
           and p_Operday between Ch.Fromdate and Ch.Todate;

        select g_Pkgaddress_Uz.Fgetobl(a.Id), g_Pkgaddress_Uz.Fgetrn(a.Id)
          into v_Region, v_District
          from g_Cliaddress t, g_Address a
         where t.Dep_Id = v_Cli_Dep_Id
           and t.Id = v_Cli_Id
           and t.Adrtype = Nvl(c_Pkgprm.Fgetvalprm('CDEPADRTYPE'), Gcliadr_Fact)
           and t.Arcfl = '0'
           and a.Id = t.Adr_Id
           and Rownum = 1;

        update z_116_Subsidy_Main_Info q
           set q.Region_Soato  =
               (select w.Ref_Region_Code
                  from z_116_Tbl_Subsidy_Regions w
                 where w.Abs_Region_Code = v_Region),
               q.District_Soato =
               (select w.Ref_Dist_Code
                  from z_116_Tbl_Subsidy_Dist w
                 where w.Abs_Dist_Code = v_District)
         where q.Pinfl = r.Pinfl
           and q.Calc_Month = i_Month;

      exception
        when others then
          continue;
      end;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Insert_Job_Status(i_Month date) is
  begin
    update z_116_Subsidy_Job_Status q
       set q.Is_Success = 0,
           q.Begin_Time = sysdate,
           q.End_Time   = null
     where q.Month = i_Month;

    if sql%notfound then
      insert into z_116_Subsidy_Job_Status
        (month, Operday, Begin_Time, End_Time, Is_Success)
      values
        (i_Month, p_Operday, sysdate, null, 0);
    end if;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Gen_Subsidy_Informations is
    v_Month     date := Trunc(sysdate, 'month');
    v_Pre_Month date := Trunc(v_Month - 1, 'month');
  begin
    c_Pkgconnect.Popen();

    -- Set Job Status
    Insert_Job_Status(v_Month);

    -- Save Main Info
    merge into z_116_Subsidy_Main_Info q
    using (select g_Pkgcliidn.Fcliidn(d.Cli_Dep_Id, d.Cli_Id, g_Pkgidn.Fid('IDN_PRS_UZ')) as Pinfl,
                  v_Month as Calc_Month,
                  v_Month + 19 as Percentage_Payment_Date, -- Static: 20.04.2024
                  'ALOQA_BANK_IPOTEKA_PERCENTAGE' as Bank_Code,
                  '00401' as Mfo,
                  1 as Contract_Type,
                  '00401' || to_char(sysdate, 'MMYYYY') ||
                  t_Pkgdeaprm.Fdeaparbycode(d.Id, d.Dep_Id, 'L_UZ_UNIQNUM') || '1711728227' as Request_Key,
                  d.Sdok as All_Credit_Amount,
                  p.Id as Proc_Id,
                  d.Cli_Id,
                  d.Cli_Dep_Id,
                  d.Dcl_Id,
                  d.Dep_Id as Dea_Dep_Id,
                  d.Id as Dea_Id,
                  d.Srv_Dep_Id,
                  case g.Encodefl
                    when '0' then
                     Substr(g_Acattrs.Fcliname(d.Cli_Dep_Id, d.Cli_Id), 1, 250)
                    else
                     Substr(g_Pkgcli.Fgetclilongname(d.Cli_Dep_Id, d.Cli_Id, o.Dord), 1, 250)
                  end as Cli_Name
             from t_Ord      o,
                  t_Dea      d,
                  t_Process  p,
                  g_Cli      g,
                  t_Bop_Stat s,
                  t_Procmem  m,
                  t_Deacls   c,
                  c_Dep_Std  Srvd,
                  c_Dep_Std  Cd,
                  l_Dea      Dd
            where o.Dep_Id = d.Dep_Id
              and o.Id = d.Id
              and d.Dep_Id = m.Dep_Id
              and d.Id = m.Ord_Id
              and m.Mainfl = '1'
              and p.Id = m.Id
              and s.Id = p.Bop_Id
              and s.Nord = p.Nstat
              and s.Code = 'ACTUAL'
              and c.Id = d.Dcl_Id
              and Dd.Dep_Id = d.Dep_Id
              and Dd.Id = d.Id
              and exists (select 1
                     from Dual
                    where c_Pkggrant.Fchkusrord_2(d.Dep_Id, d.Id, 3) = 1
                      and Bs_Operation.Fisparentwait(p.Id) = 0)
              and Dd.Retfl = 0
              and Dd.Dep_Id = Cd.Id
              and g.Dep_Id = d.Cli_Dep_Id
              and g.Id = d.Cli_Id
              and Srvd.Id = d.Srv_Dep_Id
              and exists (select 1
                     from Dual
                    where c_Pkggrant.Fchkclidet(d.Cli_Dep_Id, d.Cli_Id) = 1)
              and c.Code in ('UZ.FL.SUBCRED.SO.AN',
                             'UZ.FL.SUBCRED.SO.DF',
                             'UZ.FL.SUBCRED.REK.AN',
                             'UZ.FL.SUBCRED.REK.DF',
                             'UZ.FL.SUBCRED',
                             'UZ.FL.SUBCRED.OB',
                             'UZ.FL.SUBCREDD',
                             'UZ.FL.SUBCREDR',
                             'UZ.FL.SUBCREDRD')) w
    on (q.Pinfl = w.Pinfl and q.Calc_Month = w.Calc_Month)
    when matched then
      update
         set q.Percentage_Payment_Date = w.Percentage_Payment_Date,
             q.Bank_Code               = w.Bank_Code,
             q.Mfo                     = w.Mfo,
             q.Contract_Type           = w.Contract_Type,
             q.Request_Key             = w.Request_Key,
             q.All_Credit_Amount       = w.All_Credit_Amount,
             q.Proc_Id                 = w.Proc_Id,
             q.Cli_Id                  = w.Cli_Id,
             q.Cli_Dep_Id              = w.Cli_Dep_Id,
             q.Dcl_Id                  = w.Dcl_Id,
             q.Dea_Dep_Id              = w.Dea_Dep_Id,
             q.Dea_Id                  = w.Dea_Id,
             q.Srv_Dep_Id              = w.Srv_Dep_Id,
             q.Full_Name               = w.Cli_Name
    when not matched then
      insert
        (Pinfl,
         Calc_Month,
         Percentage_Payment_Date,
         Bank_Code,
         Mfo,
         Contract_Type,
         Request_Key,
         All_Credit_Amount,
         Proc_Id,
         Cli_Id,
         Cli_Dep_Id,
         Dcl_Id,
         Dea_Dep_Id,
         Dea_Id,
         Srv_Dep_Id,
         Full_Name)
      values
        (w.Pinfl,
         w.Calc_Month,
         w.Percentage_Payment_Date,
         w.Bank_Code,
         w.Mfo,
         w.Contract_Type,
         w.Request_Key,
         w.All_Credit_Amount,
         w.Proc_Id,
         w.Cli_Id,
         w.Cli_Dep_Id,
         w.Dcl_Id,
         w.Dea_Dep_Id,
         w.Dea_Id,
         w.Srv_Dep_Id,
         w.Cli_Name);

    -- Set Acc External, Decision,  Contract Start Date, Percentage Depends on previus info
    update z_116_Subsidy_Main_Info q
       set q.Acc_External               =
           (select w.Acc_External
              from z_116_Subsidy_Main_Info w
             where w.Calc_Month = v_Pre_Month
               and w.Pinfl = q.Pinfl),
           q.Decision                   =
           (select w.Decision
              from z_116_Subsidy_Main_Info w
             where w.Calc_Month = v_Pre_Month
               and w.Pinfl = q.Pinfl),
           q.Contract_Payment_Start_Date =
           (select w.Contract_Payment_Start_Date
              from z_116_Subsidy_Main_Info w
             where w.Calc_Month = v_Pre_Month
               and w.Pinfl = q.Pinfl),
           q.Percentage                 =
           (select w.Percentage
              from z_116_Subsidy_Main_Info w
             where w.Calc_Month = v_Pre_Month
               and w.Pinfl = q.Pinfl)
     where q.Calc_Month = v_Month;

    -- Update Decision
    update z_116_Subsidy_Main_Info q
       set q.Decision = 6186 -- static
     where q.Calc_Month = v_Month
       and q.Decision is null;

    -- Set Percentage
    Set_Percentage(v_Month);

    -- Set Acc External
    Set_Acc_External(v_Month);

    -- Set Contract Start Date
    Set_Contract_Start_Date(v_Month);

    -- Set Rest Amount
    Set_Rest_Amount(v_Month);

    -- Set Region and City
    Set_Address(v_Month);

    -- Update Amount For this Month
    Calc_Amount_For_This_Month;

    -- Update Job Status
    update z_116_Subsidy_Job_Status q
       set q.Is_Success = 1,
           q.End_Time   = sysdate
     where q.Month = v_Month;

    commit;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Get_Month
  (
    Pdate   date,
    Poutput out clob
  ) is
    Jitem   Json_Object_t;
    Joutput Json_Array_t := Json_Array_t();
  begin
    for r in (select *
                from z_116_Subsidy_Main_Info t
               where t.Calc_Month = Pdate)
    loop
      Jitem := Json_Object_t();
      Jitem.Put('PINFL', r.Pinfl);
      Jitem.Put('CALC_MONTH', r.Calc_Month);
      Jitem.Put('ACC_EXTERNAL', r.Acc_External);
      Jitem.Put('AMOUNT_FOR_THIS_MONTH', Trunc(r.Amount_For_This_Month * 100));
      Jitem.Put('REST_AMOUNT', Trunc(r.Rest_Amount * 100));
      Jitem.Put('PERCENTAGE_PAYMENT_DATE', r.Percentage_Payment_Date);
      Jitem.Put('BANK_CODE', r.Bank_Code);
      Jitem.Put('MFO', r.Mfo);
      Jitem.Put('CONTRACT_PAYMENT_START_DATE', r.Contract_Payment_Start_Date);
      Jitem.Put('CONTRACT_TYPE', r.Contract_Type);
      Jitem.Put('REQUEST_KEY', r.Request_Key);
      Jitem.Put('DECISION', r.Decision);
      Jitem.Put('ALL_CREDIT_AMOUNT', Trunc(r.All_Credit_Amount * 100));
      Jitem.Put('CLI_ID', r.Cli_Id);
      Jitem.Put('CLI_DEP_ID', r.Cli_Dep_Id);
      Jitem.Put('DCL_ID', r.Dcl_Id);
      Jitem.Put('DEA_DEP_ID', r.Dea_Dep_Id);
      Jitem.Put('DEA_ID', r.Dea_Id);
      Jitem.Put('PROC_ID', r.Proc_Id);
      Jitem.Put('PERCENTAGE', r.Percentage);
      Jitem.Put('FULL_NAME', r.Full_Name);
      Jitem.Put('REGION_SOATO', r.Region_Soato);
      Jitem.Put('DISTRICT_SOATO', r.District_Soato);

      Joutput.Append(Jitem);
    end loop;

    Poutput := Joutput.To_Clob;
  end;

end Z_116_PKG_SUBSIDY_GEN_INFO;
]]>
    </LOB_FIELD>
    <PKGDPNBSN>
      <LINK:BSN 
        REF_NAME="BS_OPERATION"/>
    </PKGDPNBSN>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="C_DEP"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="C_USR"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_ACCBLN"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_ADDRESS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLI"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIADDRESS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIHST"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="LEDACC"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="LEDACC_DET"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="LV_QR_ARL"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="L_DEA"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_ACC"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_BAL"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_BOP_DSCR"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_BOP_STAT"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_DEA"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_DEACLS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_OPERJRN"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_OPRCHR"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_ORD"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_PROCESS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_PROCMEM"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="Z_116_SUBSIDY_JOB_STATUS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="Z_116_SUBSIDY_MAIN_INFO"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="Z_116_TBL_SUBSIDY_DIST"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="Z_116_TBL_SUBSIDY_REGIONS"/>
    </PKGDPNENT>
    <PKGDPNFNC>
      <LINK:FNC 
        REF_NAME="P_OPERDAY"/>
    </PKGDPNFNC>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="C_PKGCONNECT"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="C_PKGGRANT"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="C_PKGPRM"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="G_ACATTRS"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="G_PKGADDRESS_UZ"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="G_PKGCLI"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="G_PKGCLIIDN"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="G_PKGIDN"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="T_ASGN"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="T_PKGACCBAL"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="T_PKGARLRUN"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="T_PKGDEAPRM"/>
    </PKGDPNPKG>
    <PKGDPNDOM>
      <LINK:DOM 
        REF_NAME="G_CLIADR_TYPE"/>
    </PKGDPNDOM>
  </PKG>
</DDC>
