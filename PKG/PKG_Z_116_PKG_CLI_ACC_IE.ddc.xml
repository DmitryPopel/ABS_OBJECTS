<?xml version="1.0" encoding="utf-8"?>
<DDC 
  CLASS="PKG" 
  KEY="Z_116_PKG_CLI_ACC_IE" 
  MODE="O" 
  xmlns:LINK="ddc:link" 
  xmlns:CFG="ddc:cfg" 
  HASH="FFEDE195E8AB91C6533A06D563AC9902">
  <PKG 
    NAME="Z_116_PKG_CLI_ACC_IE">
    <LOB_FIELD 
      NAME="HEADER">
      <![CDATA[create or replace package COLVIR.Z_116_PKG_CLI_ACC_IE is
  /*
    * Пакет подготовки данных для отчета Z_116_CLI_ACC_IE - Общие сведения по ИП
    * @author Farhod
    * Copyright (c) 2024 Aloqabank
  */
  ----------------------------------------------------------------------------------------------------
  Procedure Pprocessonechunk
  (
    Pchunknum number,
    Psid      number,
    Dop       date,
    Pdatepost in varchar2 default null
  );

  ----------------------------------------------------------------------------------------------------
  /*
    * Процедура подготовки данных для отчета Z_116_CLI_ACC_IE - Общие сведения по ИП
    * @param pFROM Дата c
    * @param pTO Дата до
    * @param pDEP_ID ID подразделения
    * @param pSUB Сводный
  */
  Procedure Run
  (
    Pfrom   date,
    Pto     date,
    Pdep_Id number,
    Psub    number
  );

  ----------------------------------------------------------------------------------------------------
  Procedure Pclean;
end Z_116_PKG_CLI_ACC_IE;
]]>
    </LOB_FIELD>
    <LOB_FIELD 
      NAME="TEXT">
      <![CDATA[create or replace package body COLVIR.Z_116_PKG_CLI_ACC_IE is
  ----------------------------------------------------------------------------------------------------
  Procedure Run
  (
    Pfrom   date,
    Pto     date,
    Pdep_Id number,
    Psub    number
  ) is
    Dfromdate date;
    Idata     z_116_Cli_Acc_Ie_Raw%rowtype;
  begin
    c_Pkgconnect.Popen();

    l_Pkgrpt_Prlutl.Pprepare(Prpt_Code => 'Z_116_CLI_ACC_IE',
                             Prptdate  => p_Operday,
                             Ppkg_Name => 'Z_116_PKG_CLI_ACC_IE',
                             Ptbl_Name => 'Z_116_CLI_ACC_IE_RAW');

    for r in (with Acc as
                 (select t.*,
                        Substr(Cli, 1, Instr(Cli, ',') - 1) Cli_Dep_Id,
                        Substr(Cli, Instr(Cli, ',') + 1) Cli_Id
                   from (select a.*,
                                (select Clidep_Id || ',' || Cli_Id
                                   from (select Clidep_Id, Cli_Id
                                           from g_Accblnhst
                                          where Dep_Id = a.Dep_Id
                                            and Id = a.Id
                                            and p_Operday between Fromdate and Todate
                                         union all
                                         select to_number(Pk1), to_number(Pk2)
                                           from Ledacc_Det
                                          where Dep_Id = a.Dep_Id
                                            and Acc_Id = a.Id
                                            and Sgn_Id in (select *
                                                             from table(Gl_Acc.Fclianllst))
                                         union all
                                         select p.Prsdep_Id, p.Prs_Id
                                           from g_Accmangr m, g_Cliauthprs p
                                          where m.Dep_Id = a.Dep_Id
                                            and m.Id = a.Id
                                            and m.Mngr_Dep_Id = p.Dep_Id
                                            and m.Mngr_Id = p.Id
                                            and m.Nord = p.Nord
                                            and p.Nsign = c_Sign_Owner)
                                  where Rownum = 1) Cli
                           from g_Accbln a
                          where Substr(a.Code, 1, 5) in ('20208', '20294', '20212', '20210', '20218')
                            and a.Dreg between Pfrom and Pto) t)
                select g.Dep_Id,
                       g.Id,
                       g.Ord_Id,
                       g.Code as Cli_Code,
                       g.Birdate,
                       Gh.Longname Cli_Name,
                       (select Longname
                          from t_Reg_Std
                         where Id = Gh.Citiz_Id) Citiz_Name,
                       Gh.Passser || ' ' || Gh.Passnum as Passport,
                       Gh.Passdat,
                       Gh.Passfin,
                       Gh.Passorg,
                       a.Code as Aut_Code,
                       Dep.Code as Aut_Dep_Code,
                       Acc.Code as Acc_Code,
                       Acc.Dreg,
                       case
                         when Substr(Acc.Code, 1, 5) = '20206' then
                          'Денежные переводы'
                         when Substr(Acc.Code, 1, 5) in ('20406', '20606') then
                          'Депозиты'
                         when Substr(Acc.Code, 1, 5) in ('22616', '22618') then
                          'Пластиковая карточка'
                       end as Type_Service,
                       (select St.Longname
                          from t_Procmem Pm, t_Process Pr, t_Bop_Stat St
                         where Pm.Ord_Id = Acc.Ord_Id
                           and Pm.Dep_Id = Acc.Dep_Id
                           and Pm.Mainfl = '1'
                           and Pr.Id = Pm.Id
                           and St.Id = Pr.Bop_Id
                           and St.Nord = Pr.Nstat
                           and Rownum = 1) as State_Name,
                       Gh.Taxcode
                  from Acc
                  join g_Cli g
                    on g.Dep_Id = Acc.Cli_Dep_Id
                   and g.Id = Acc.Cli_Id
                   and g.Typefl = 2
                  join g_Clihst Gh
                    on Gh.Dep_Id = g.Dep_Id
                   and Gh.Id = g.Id
                   and p_Operday between Gh.Fromdate and Gh.Todate
                  join t_Accgrp a
                    on a.Id = Gh.Aut_Id
                  join c_Dep_Std Dep
                    on Dep.Id = a.Dep_Id
                   and ((Psub = 0 and Pdep_Id = Dep.Id) or
                       (Psub = 1 and
                       Dep.Id in (select Id
                                      from c_Dep
                                     start with Id = Pdep_Id
                                    connect by prior Id = Id_Hi))))
    loop
      Idata.Dep_Id       := r.Dep_Id;
      Idata.Id           := r.Id;
      Idata.Cli_Name     := r.Cli_Name; -- Ф.И.О
      Idata.Cli_Code     := r.Cli_Code; -- Код клиента
      Idata.Birdate      := r.Birdate; -- Дата рождения
      Idata.Adr_Birth    := g_Pkgaddress.Fcliadr(r.Dep_Id, r.Id, Gcliadr_Birth); -- Место рождения
      Idata.Citiz_Name   := r.Citiz_Name; -- Гражданство
      Idata.Passport     := r.Passport; -- Серия/номер паспорта
      Idata.Passdat      := r.Passdat; -- Дата выдачи
      Idata.Passfin      := r.Passfin; -- Срок действия
      Idata.Passorg      := r.Passorg; -- Орган выдавший паспорт
      Idata.Addr_Reg     := g_Pkgaddress.Fcliadr(r.Dep_Id, r.Id, Gcliadr_Reg); -- Постоянное места жителства
      Idata.Addr_Temp    := g_Pkgaddress.Fcliadr(r.Dep_Id, r.Id, Gcliadr_Temp); -- Временное места жителства
      Idata.Aut_Dep_Code := r.Aut_Dep_Code; -- Код филиала (РЦКУ)
      Idata.Aut_Code     := r.Aut_Code; -- РЦКУ/ЦКУ
      Idata.Taxcode      := Substr(r.Taxcode, 1, 254); -- ИНН

      begin
        select t.Dt_To, -- Срок действия
               Substr(t.Org, 1, 254), -- Регистрирующий орган
               Substr(t.Regnum, 1, 254), -- Номер регистрации
               t.Regdt -- Дата регистрации
          into Idata.Reg_Dt_To, Idata.Reg_Org, Idata.Regnum, Idata.Regdt
          from (select *
                  from g_Cliregdoc t
                 where t.Dep_Id = r.Dep_Id
                   and t.Id = r.Id
                 order by t.Nord) t
         where Rownum = 1;
      exception
        when No_Data_Found then
          Idata.Reg_Dt_To := null; -- Срок действия
          Idata.Reg_Org   := null; -- Регистрирующий орган
          Idata.Regnum    := null; -- Номер регистрации
          Idata.Regdt     := null; -- Дата регистрации
      end;

      begin
        select u.Longname, l.Presentdate
          into Idata.User_First, Idata.Date_First -- Сторудник заполнявший анкету, Дата заполнения анкеты
          from t_Docdos Ds, t_Doclst l, c_Usr u
         where Ds.Dep_Id = r.Dep_Id
           and Ds.Ord_Id = r.Ord_Id
           and l.Id = Ds.Id
           and l.Id_Us = u.Id(+)
         order by l.Presentdate
         fetch first 1 row only;
      exception
        when No_Data_Found then
          Idata.User_First := null; -- Сторудник заполнявший анкету
          Idata.Date_First := null; -- Дата заполнения анкеты
      end;

      begin
        select u.Longname, l.Presentdate -- Ответственный сотрудник, Дата изменения анкеты
          into Idata.User_Last, Idata.Date_Last
          from t_Docdos Ds, t_Doclst l, c_Usr u
         where Ds.Dep_Id = r.Dep_Id
           and Ds.Ord_Id = r.Ord_Id
           and l.Id = Ds.Id
           and l.Id_Us = u.Id(+)
         order by l.Presentdate
         fetch first 1 row only;
      exception
        when No_Data_Found then
          Idata.User_Last := null; -- Ответственный сотрудник
          Idata.Date_Last := null; -- Дата изменения анкеты
      end;

      begin
        select Substr(Bs_Dom.Dname('G_VALRISK', Valrisk, 'N'), 1, 250), Reason, Fromdate
          into Idata.Valrisk, Idata.Reason_Risk, Dfromdate -- Уровень риска, Причина данногоуровня риска
          from g_Clivalrisk
         where Dep_Id = r.Dep_Id
           and Id = r.Id
           and p_Operday between Fromdate and Todate
           and Rownum = 1;

        select Substr(Listagg(Code, ',') Within group(order by Code), 1, 4000),
               Substr(Listagg(Longname, Chr(10)) Within group(order by Code), 1, 4000)
          into Idata.Valrisk_Code, Idata.Reason_Names -- Критерий код, Наименование критерия риска
          from g_Cliriskcrit c, g_Riskcrit t, g_Clivalrisk v
         where v.Dep_Id = r.Dep_Id
           and v.Id = r.Id
           and v.Fromdate = Dfromdate
           and c.Dep_Id = v.Dep_Id
           and c.Cli_Id = v.Id
           and c.Id_Crit = t.Id
           and v.Fromdate between c.Fromdate and c.Todate
           and t.Id_Hi is null
           and c.Valrisk = '02';
      exception
        when No_Data_Found then
          Idata.Valrisk      := null; -- Уровень риска
          Idata.Reason_Risk  := null; -- Причина данногоуровня риска
          Idata.Valrisk_Code := null; -- Критерий код
          Idata.Reason_Names := null; -- Наименование критерия риска
      end;

      Idata.Type_Service := r.Type_Service; -- Вид услуги
      Idata.Acc_Code     := r.Acc_Code; -- Модуль счета
      Idata.Dreg         := r.Dreg; -- Дата открытия первого банковского счета
      Idata.State_Name   := r.State_Name; -- Cостояние счета
      Idata.Sid          := l_Pkgrpt_Prlutl.Fgetmainsessionnum;
      Idata.Chunknum     := 0;

      insert into z_116_Cli_Acc_Ie_Raw
      values Idata;

      l_Pkgrpt_Prlutl.Prun;
      commit;
    end loop;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Pprocessonechunk
  (
    Pchunknum number,
    Psid      number,
    Dop       date,
    Pdatepost in varchar2 default null
  ) is
  begin
    commit;
  end;

  ----------------------------------------------------------------------------------------------------
  Procedure Pclean is
  begin
    l_Pkgrpt_Prlutl.Pclean;
  end;

end Z_116_PKG_CLI_ACC_IE;
]]>
    </LOB_FIELD>
    <PKGDPNBSN>
      <LINK:BSN 
        REF_NAME="BS_DOM"/>
    </PKGDPNBSN>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="C_DEP"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="C_USR"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_ACCBLN"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_ACCBLNHST"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_ACCMANGR"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLI"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIAUTHPRS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIHST"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIREGDOC"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIRISKCRIT"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_CLIVALRISK"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="G_RISKCRIT"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="LEDACC_DET"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_ACCGRP"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_BOP_STAT"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_DOCDOS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_DOCLST"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_PROCESS"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_PROCMEM"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="T_REG"/>
    </PKGDPNENT>
    <PKGDPNENT>
      <LINK:ENT 
        REF_NAME="Z_116_CLI_ACC_IE_RAW"/>
    </PKGDPNENT>
    <PKGDPNFNC>
      <LINK:FNC 
        REF_NAME="P_OPERDAY"/>
    </PKGDPNFNC>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="C_PKGCONNECT"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="GL_ACC"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="G_PKGADDRESS"/>
    </PKGDPNPKG>
    <PKGDPNPKG>
      <LINK:PKG 
        REF_NAME="L_PKGRPT_PRLUTL"/>
    </PKGDPNPKG>
    <PKGDPNDOM>
      <LINK:DOM 
        REF_NAME="G_CLIADR_TYPE"/>
    </PKGDPNDOM>
    <PKGDPNDOM>
      <LINK:DOM 
        REF_NAME="G_CLIPRS_NSIGN"/>
    </PKGDPNDOM>
  </PKG>
</DDC>
